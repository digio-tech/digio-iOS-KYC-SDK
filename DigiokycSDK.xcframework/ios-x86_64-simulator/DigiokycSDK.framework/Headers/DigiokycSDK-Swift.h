#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef DIGIOKYCSDK_SWIFT_H
#define DIGIOKYCSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreLocation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DigiokycSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSString;
@class NSNumber;

SWIFT_PROTOCOL("_TtP11DigiokycSDK27CameraEventListenerDelegate_")
@protocol CameraEventListenerDelegate
- (void)onImageCaptured:(NSString * _Nonnull)type :(NSInteger)count :(NSInteger)total :(NSString * _Nonnull)imagePath :(NSNumber * _Nullable)darkness :(NSNumber * _Nullable)lightness :(NSNumber * _Nullable)sharpness;
- (void)onFaceDetected:(NSInteger)x :(NSInteger)y :(NSInteger)width :(NSInteger)height :(NSNumber * _Nullable)leftEyeOpenProbability :(NSNumber * _Nullable)rightEyeOpenProbability :(NSNumber * _Nullable)smilingProbability :(NSNumber * _Nullable)headEulerAngleX :(NSNumber * _Nullable)headEulerAngleY :(NSNumber * _Nullable)headEulerAngleZ :(NSNumber * _Nullable)darkness :(NSNumber * _Nullable)lightness :(NSNumber * _Nullable)sharpness :(BOOL)isMultiface :(NSInteger)numberOfFaces;
- (void)onFaceUndetected;
- (void)onEndCapture;
- (void)onError:(NSString * _Nonnull)error;
- (void)onMessage:(NSString * _Nonnull)message;
- (void)onPermissionDenied;
- (void)onQRCodeScanned:(NSString * _Nonnull)content;
@end

@class NSCoder;

/// This view is responsible to draw:
/// <ul>
///   <li>
///     face detection box;
///   </li>
///   <li>
///     face contours;
///   </li>
/// </ul>
SWIFT_CLASS("_TtC11DigiokycSDK17CameraGraphicView")
@interface CameraGraphicView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
@end

@class UIColor;

/// Class responsible to handle the camera operations.
SWIFT_CLASS("_TtC11DigiokycSDK10CameraView")
@interface CameraView : UIView
@property (nonatomic, strong) id <CameraEventListenerDelegate> _Nullable cameraEventListener;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
/// Start camera preview if has permission.
- (void)startPreview;
/// Start capture type: none, face, barcode or frame.
/// Must have started preview, see <code>startPreview</code>.
/// precondition:
/// value string must be one of <code>"none"</code>, <code>"face"</code>, <code>"qrcode"</code>, <code>"frame"</code> and must have started preview.
/// <ul>
///   <li>
///     Parameters: <code>"none"</code> | <code>"face"</code> | <code>"qrcode"</code> | <code>"frame"</code>.
///   </li>
/// </ul>
- (void)startCaptureType:(NSString * _Nonnull)captureType;
/// Stop camera image capture.
- (void)stopAnalyzer;
/// Destroy camera preview.
- (void)destroy;
- (void)restartCapture:(NSString * _Nonnull)type;
- (void)capture;
/// Toggle between Front and Back Camera.
- (void)toggleCameraLens;
/// Set camera lens: “front” or “back”.
/// <ul>
///   <li>
///     Parameters: “back” || “front”
///   </li>
/// </ul>
- (void)setCameraLens:(NSString * _Nonnull)cameraLens;
/// Get current camera lens.
///
/// returns:
/// “front” || “back”.
/// Default value is “front”.
- (NSString * _Nonnull)getCameraLens SWIFT_WARN_UNUSED_RESULT;
/// Set number of face/frame file images to create.
/// \param numberOfImages The number of images to create.
/// Default value is 0.
///
- (void)setNumberOfImages:(NSInteger)numberOfImages;
/// Set saving face/frame images time interval in milli seconds.
/// \param faceTimeBetweenImages The time in milli seconds.
/// Default value is <code>1000</code>.
///
- (void)setTimeBetweenImages:(int64_t)timeBetweenImages;
/// Set face image width to be created.
/// \param width The file image width in pixels.
/// Default value is <code>200</code>.
///
- (void)setOutputImageWidth:(NSInteger)width;
/// Set face image height to be created.
/// \param height The file image height in pixels.
/// Default value is <code>200</code>.
///
- (void)setOutputImageHeight:(NSInteger)height;
/// Set to enable/disable save images when capturing face/frame.
/// \param enable The indicator to enable or disable the face/frame save images.
/// Default value is <code>false</code>.
///
- (void)setSaveImageCaptured:(BOOL)enable;
/// Set to enable/disable detection box when face/qrcode detected.
/// The detection box is the the face/qrcode bounding box normalized to UI.
/// \param enable The indicator to enable/disable detection box.
/// Default value is <code>false</code>.
///
- (void)setDetectionBox:(BOOL)enable;
/// Set detection box ARGB color.
/// \param alpha The alpha value.
///
/// \param red The red value.
///
/// \param green The green value.
///
/// \param blue The blue value.
/// Default value is <code>(1.0, 1.0, 1.0, 1.0)</code>.
///
- (void)setDetectionBoxColor:(float)alpha :(float)red :(float)green :(float)blue;
/// Set a face/qrcode minimum size to detect in percentage related with the camera preview.
/// For example, if set <code>0.5</code>, will capture face/qrcode with the detection box width occupying
/// at least 50% of the screen width.
/// \param minimumSize Value between <code>0</code> and <code>1</code>.
/// Default value is <code>0.0</code>,
///
- (void)setDetectionMinSize:(float)minimumSize;
/// Set a face/qrcode maximum size to detect in percentage related with the camera preview.
/// For example, if set <code>0.7</code>, will capture face/qrcode with the detection box width occupying
/// until 70% of the screen width.
/// \param maximumSize Value between <code>0</code> and <code>1</code>.
/// Default value is <code>1.0</code>.
///
- (void)setDetectionMaxSize:(float)maximumSize;
/// Represents the percentage.
/// Positive value enlarges and negative value reduce the top side of the detection.
/// Use the <code>setDetectionBox</code> to have a visual result.
/// Default value: <code>0</code>
@property (nonatomic) float detectionTopSize;
/// Represents the percentage.
/// Positive value enlarges and negative value reduce the right side of the detection.
/// Use the <code>setDetectionBox</code> to have a visual result.
/// Default value: <code>0</code>
@property (nonatomic) float detectionRightSize;
/// Represents the percentage.
/// Positive value enlarges and negative value reduce the bottom side of the detection.
/// Use the <code>setDetectionBox</code> to have a visual result.
/// Default value: <code>0</code>
@property (nonatomic) float detectionBottomSize;
/// Represents the percentage.
/// Positive value enlarges and negative value reduce the left side of the detection.
/// Use the <code>setDetectionBox</code> to have a visual result.
/// Default value: <code>0</code>
@property (nonatomic) float detectionLeftSize;
/// Set to enable/disable face contours when face detected.
/// \param enable The indicator to enable/disable face contours.
/// Default value is <code>false</code>.
///
- (void)setFaceContours:(BOOL)enable;
/// Set face contours ARGB color.
/// \param alpha The alpha value.
///
/// \param red The red value.
///
/// \param green The green value.
///
/// \param blue The blue value.
/// Default value is <code>(1.0, 1.0, 1.0, 1.0)</code>.
///
- (void)setFaceContoursColor:(float)alpha :(float)red :(float)green :(float)blue;
/// Set to enable/disable the device torch. Available only to camera lens “back”.
/// \param enable The indicator to enable/disable the torch.
/// Default value is <code>false</code>.
///
- (void)setTorch:(BOOL)enable;
/// Set to apply enable/disable region of interest.
/// \param enable The indicator to enable/disable region of interest.
/// Default value is <code>false</code>.
///
- (void)setROI:(BOOL)enable;
/// Camera preview top distance in percentage.
/// \param percentage Value between <code>0</code> and <code>1</code>. Represents the percentage.
/// Default value is <code>0.0</code>.
///
- (void)setROITopOffset:(float)topOffset;
/// Camera preview right distance in percentage.
/// \param percentage Value between <code>0</code> and <code>1</code>. Represents the percentage.
/// Default value is <code>0.0</code>.
///
- (void)setROIRightOffset:(float)rightOffset;
/// Camera preview bottom distance in percentage.
/// \param percentage Value between <code>0</code> and <code>1</code>. Represents the percentage.
/// Default value is <code>0.0</code>.
///
- (void)setROIBottomOffset:(float)bottomOffset;
/// Camera preview left distance in percentage.
/// \param percentage Value between <code>0</code> and <code>1</code>. Represents the percentage.
/// Default value is <code>0.0</code>.
///
- (void)setROILeftOffset:(float)leftOffset;
/// Set to enable/disable region of interest offset visibility.
/// \param enable The indicator to enable/disable region of interest visibility.
/// Default value is <code>false</code>.
///
- (void)setROIAreaOffset:(BOOL)enable;
/// Set region of interest area offset color.
/// \param alpha Values between <code>0</code> and <code>1</code>.
///
/// \param red Values between <code>0</code> and <code>1</code>.
///
/// \param green Values between <code>0</code> and <code>1</code>.
///
/// \param blue Values between <code>0</code> and <code>1</code>.
/// Default value is <code>(0.4, 1.0, 1.0, 1.0)</code>.
///
- (void)setROIAreaOffsetColor:(float)alpha :(float)red :(float)green :(float)blue;
- (void)setFaceDetectionStorkeColorFrom:(UIColor * _Nonnull)color;
- (void)setSuggestionMessageWithMessage:(NSString * _Nullable)message textColor:(UIColor * _Nonnull)textColor backgroundColor:(UIColor * _Nonnull)backgroundColor;
- (void)setMinimumFaceSize:(CGFloat)size;
@end

typedef SWIFT_ENUM(NSInteger, CaptureType, open) {
  CaptureTypeNONE = 0,
  CaptureTypeFACE = 1,
  CaptureTypeQRCODE = 2,
  CaptureTypeFRAME = 3,
};


SWIFT_CLASS("_TtC11DigiokycSDK17PermissionManager")
@interface PermissionManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CLLocationManager;

@interface PermissionManager (SWIFT_EXTENSION(DigiokycSDK)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
@end






#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
